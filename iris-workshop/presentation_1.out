\BOOKMARK [2][]{Outline0.1}{Capability Machines}{}% 1
\BOOKMARK [3][]{Outline0.1.1.20}{Enforcing Local Stack Encapsulation using Capabilities}{Outline0.1}% 2
\BOOKMARK [3][]{Outline0.1.2.24}{Enforcing Well Bracketed Control Flow using Capabilities}{Outline0.1}% 3
\BOOKMARK [3][]{Outline0.1.3.31}{Local Capabilities}{Outline0.1}% 4
\BOOKMARK [2][]{Outline0.2}{Reasoning about Capability Safety}{}% 5
\BOOKMARK [2][]{Outline0.3}{Program Logic}{}% 6
\BOOKMARK [3][]{Outline0.3.1.54}{A Capability Points-to Predicate}{Outline0.3}% 7
\BOOKMARK [2][]{Outline0.4}{Proving Hoare Triples}{}% 8
\BOOKMARK [3][]{Outline0.4.1.60}{Successful Execution}{Outline0.4}% 9
\BOOKMARK [3][]{Outline0.4.2.64}{Failed Execution}{Outline0.4}% 10
\BOOKMARK [2][]{Outline0.5}{A Unary Logical Relation for Reasoning about Semantic Properties of an Untyped Language}{}% 11
\BOOKMARK [3][]{Outline0.5.1.68}{The Value Relation}{Outline0.5}% 12
\BOOKMARK [3][]{Outline0.5.2.72}{The Execute Condition}{Outline0.5}% 13
\BOOKMARK [3][]{Outline0.5.3.74}{The Expression Relation}{Outline0.5}% 14
\BOOKMARK [2][]{Outline0.6}{The Fundamental Theorem of Logical Relations}{}% 15
\BOOKMARK [2][]{Outline0.7}{Reasoning about Unknown Code}{}% 16
\BOOKMARK [2][]{Outline0.8}{Conclusion}{}% 17
